[
  {
    "id": "platform",
    "name": "Platform",
    "description": "Operating systems and platforms the wallet is available on.",
    "type": "lightning",
    "category": "basics",
    "order": 1
  },
  {
    "id": "openSource",
    "name": "Open Source",
    "description": "Whether the wallet's source code is publicly available for review.",
    "type": "lightning",
    "category": "basics",
    "order": 2
  },
  {
    "id": "availability",
    "name": "Availability",
    "description": "Geographic restrictions on wallet usage.",
    "type": "lightning",
    "category": "basics",
    "order": 3
  },
  {
    "id": "custodialStatus",
    "name": "Category",
    "description": "Type of wallet architecture (custodial, non-custodial, etc.).",
    "type": "lightning",
    "category": "basics",
    "order": 4
  },
  {
    "id": "noKyc",
    "name": "No KYC",
    "description": "Whether the wallet can be used without Know Your Customer requirements.",
    "type": "lightning",
    "category": "basics",
    "order": 5
  },
  {
    "id": "transactionLimits",
    "name": "Limits",
    "description": "Transaction amount limitations imposed by the wallet.",
    "type": "lightning",
    "category": "basics",
    "order": 6
  },
  {
    "id": "transactionFees",
    "name": "Extra Fees",
    "description": "Additional fees charged by the wallet beyond standard network fees.",
    "type": "lightning",
    "category": "basics",
    "order": 7
  },
  {
    "id": "backupOptions",
    "name": "Recovery Method",
    "description": "Methods available to recover wallet funds in case of device loss.",
    "type": "lightning",
    "category": "recover",
    "order": 8
  },
  {
    "id": "peerBackupOptions",
    "name": "SCB Management",
    "description": "Static Channel Backup management approach.",
    "type": "lightning",
    "category": "recover",
    "order": 9
  },
  {
    "id": "bolt11Support",
    "name": "BOLT11",
    "description": "Support for BOLT11 Lightning invoice format.",
    "type": "lightning",
    "category": "ln_formats",
    "order": 10
  },
  {
    "id": "bolt12Support",
    "name": "BOLT12",
    "description": "Support for BOLT12 (Offers) payment format.",
    "type": "lightning",
    "category": "ln_formats",
    "order": 11
  },
  {
    "id": "bolt12HrnSupport",
    "name": "BOLT12 + BIP353 HRN",
    "description": "Support for BOLT12 with BIP353 Human Readable Names.",
    "type": "lightning",
    "category": "ln_formats",
    "order": 12
  },
  {
    "id": "lnurlPay",
    "name": "LNURL-pay",
    "description": "Support for LNURL-pay protocol for simplified payments.",
    "type": "lightning",
    "category": "ln_formats",
    "order": 13
  },
  {
    "id": "lightningAddressSupport",
    "name": "Lightning Address Support",
    "description": "Support for Lightning Address format (user@domain.com).",
    "type": "lightning",
    "category": "ln_formats",
    "order": 14
  },
  {
    "id": "lnurlWithdraw",
    "name": "LNURL-withdraw",
    "description": "Support for LNURL-withdraw protocol for simplified withdrawals.",
    "type": "lightning",
    "category": "ln_formats",
    "order": 15
  },
  {
    "id": "noAmountInvoices",
    "name": "No-Amount Invoices",
    "description": "Support for invoices without a specified amount.",
    "type": "lightning",
    "category": "invoice_customization",
    "order": 16
  },
  {
    "id": "customInvoiceMetadata",
    "name": "Custom Metadata",
    "description": "Ability to add custom information to Lightning invoices.",
    "type": "lightning",
    "category": "invoice_customization",
    "order": 17
  },
  {
    "id": "invoiceExpiryControl",
    "name": "Default Expiry",
    "description": "Default expiration time for Lightning invoices created by this wallet.",
    "type": "lightning",
    "category": "invoice_customization",
    "order": 18
  },
  {
    "id": "receiveOnChain",
    "name": "Receive On-Chain",
    "description": "Support for receiving Bitcoin on-chain.",
    "type": "lightning",
    "category": "on_chain_and_other_layers",
    "order": 19
  },
  {
    "id": "bitcoinAddressType",
    "name": "Address Type",
    "description": "Type of Bitcoin addresses supported for on-chain transactions.",
    "type": "lightning",
    "category": "on_chain_and_other_layers",
    "order": 20
  },
  {
    "id": "sendOnChain",
    "name": "Send On-Chain",
    "description": "Support for sending Bitcoin on-chain.",
    "type": "lightning",
    "category": "on_chain_and_other_layers",
    "order": 21
  },
  {
    "id": "taprootTransactions",
    "name": "Taproot (P2TR)",
    "description": "Support for Taproot transaction format.",
    "type": "lightning",
    "category": "on_chain_and_other_layers",
    "order": 22
  },
  {
    "id": "nodeType",
    "name": "Bitcoin Network",
    "description": "How the wallet connects to Bitcoin. 'API' means no custom node connection. Options like Electrum Server or Neutrino allow custom node connections via different interfaces.",
    "type": "lightning",
    "category": "on_chain_and_other_layers",
    "order": 23
  },
  {
    "id": "submarineSwaps",
    "name": "Swap",
    "description": "Support for swapping between Lightning and on-chain Bitcoin.",
    "type": "lightning",
    "category": "on_chain_and_other_layers",
    "order": 24
  },
  {
    "id": "otherNetworks",
    "name": "Other Networks",
    "description": "Support for other networks beyond Bitcoin.",
    "type": "lightning",
    "category": "on_chain_and_other_layers",
    "order": 25
  },
  {
    "id": "implementation",
    "name": "Implementation",
    "description": "Lightning Network implementation used by the wallet.",
    "type": "lightning",
    "category": "lightning_specific",
    "order": 26
  },
  {
    "id": "lspIntegration",
    "name": "LSP Integration",
    "description": "Lightning Service Provider integration. May include channel management, pathfinding, zero-conf channels, watchtower, or Static Channel Backups (SCB) storage, fully or partially.",
    "type": "lightning",
    "category": "lightning_specific",
    "order": 27
  },
  {
    "id": "channelManagement",
    "name": "Channel / Peer Management",
    "description": "Approach to managing Lightning channels and peers.",
    "type": "lightning",
    "category": "lightning_specific",
    "order": 28
  },
  {
    "id": "zeroConfChannels",
    "name": "Zero-Conf Channels",
    "description": "Support for zero-confirmation channels. Enables instant Bitcoin receipt on Lightning with LSP assistance.",
    "type": "lightning",
    "category": "lightning_specific",
    "order": 29
  },
  {
    "id": "clientSideRouting",
    "name": "Client-Side Routing",
    "description": "When enabled, the wallet performs its own pathfinding to route payments through the Lightning Network rather than relying on an LSP or third-party service.",
    "type": "lightning",
    "category": "lightning_specific",
    "order": 30
  },
  {
    "id": "watchtowerIntegration",
    "name": "Watchtower Integration",
    "description": "Support for watchtower services to protect against channel breaches.",
    "type": "lightning",
    "category": "lightning_specific",
    "order": 31
  },
  {
    "id": "mppSupport",
    "name": "MPP / AMP",
    "description": "Support for Multi-Path Payments (MPP) or Atomic Multi-Path (AMP) payments, which split larger payments into multiple smaller pieces to overcome individual channel capacity limits.",
    "type": "lightning",
    "category": "lightning_specific",
    "order": 32
  },
  {
    "id": "maxRoutingFee",
    "name": "Max Routing Fee",
    "description": "Ability to set maximum routing fees for payments.",
    "type": "lightning",
    "category": "lightning_specific",
    "order": 33
  },
  {
    "id": "purchaseInbound",
    "name": "Purchase Inbound",
    "description": "Ability to purchase inbound liquidity for receiving capacity.",
    "type": "lightning",
    "category": "lightning_specific",
    "order": 34
  },
  {
    "id": "splicingSupport",
    "name": "Splicing Support",
    "description": "Support for splicing (adding/removing funds from channels without closing).",
    "type": "lightning",
    "category": "lightning_specific",
    "order": 35
  },
  {
    "id": "routingNode",
    "name": "Routing Node",
    "description": "Whether the wallet can function as a routing node.",
    "type": "lightning",
    "category": "lightning_specific",
    "order": 36
  },
  {
    "id": "nostrWalletConnect",
    "name": "NWC (Nostr Wallet Connect)",
    "description": "Support for Nostr Wallet Connect protocol.",
    "type": "lightning",
    "category": "lightning_specific",
    "order": 37
  },
  {
    "id": "blindRouting",
    "name": "Blind Routing",
    "description": "Support for blind routing for enhanced privacy.",
    "type": "lightning",
    "category": "lightning_specific",
    "order": 38
  },
  {
    "id": "scidAlias",
    "name": "SCID Alias",
    "description": "Support for Short Channel ID aliases.",
    "type": "lightning",
    "category": "lightning_specific",
    "order": 39
  },
  {
    "id": "simpleTaprootChannels",
    "name": "Simple Taproot Channels",
    "description": "Support for Taproot channels using simpler scripts, more privacy, and lower fees compared to traditional P2WSH channels.",
    "type": "lightning",
    "category": "lightning_specific",
    "order": 40
  },
  {
    "id": "torSupport",
    "name": "Tor",
    "description": "Support for routing through the Tor network for enhanced privacy.",
    "type": "lightning",
    "category": "privacy",
    "order": 41
  },
  {
    "id": "testnetSupport",
    "name": "Testnet Support",
    "description": "Support for Bitcoin testnet for development and testing.",
    "type": "lightning",
    "category": "dev_tools",
    "order": 42
  },
  {
    "id": "developerApis",
    "name": "API/SDKs",
    "description": "Available developer APIs and SDKs for integration.",
    "type": "lightning",
    "category": "dev_tools",
    "order": 43
  }
]