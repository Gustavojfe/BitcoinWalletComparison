Below is a prompt for Replit Agent v2 (Claude Sonnet 3.5) to fix the translation issue in ComparisonTable.tsx so that feature values like OpenSource with customText (e.g., "Yes (GitHub)") display correctly in Spanish and English, using the existing useLanguage hook and translation files.

Prompt for Replit Agent v2 (Claude Sonnet 3.5)
Task: Fix the renderFeatureStatus function in ./src/components/ComparisonTable.tsx to correctly translate customText values for feature statuses, ensuring they display properly in both English and Spanish. Currently, when a feature like OpenSource has "value": "custom" and "customText": "Yes (GitHub)", it displays "Yes (GitHub)" in both languages because customText isn’t translated. Update the function to use the t() function from the useLanguage hook for all customText values, maintaining standardization with the existing translation system.

Context:

File to modify: ./src/components/ComparisonTable.tsx.
Translation files: ./src/locales/en.json and ./src/locales/es.json.
The component uses useLanguage, which provides t(key: string) to fetch translations from en.json or es.json based on the current language ('en' or 'es').
Example input: For a feature named "OpenSource" with value = "custom" and customText = "Yes (GitHub)", it should display "Yes (GitHub)" in English and "Sí (GitHub)" in Spanish.
Current issue: The 'custom' case in renderFeatureStatus uses customText directly without translation, bypassing t().
Requirements:

Translate customText:
Update the 'custom' case in renderFeatureStatus to map known customText values (e.g., "Yes (GitHub)") to translation keys under featureStatus.custom (e.g., t('featureStatus.custom.yesGitHub.title')).
Fall back to raw customText if no translation key exists, ensuring no breakage.
Update Translation Files:
Add keys for common customText values (e.g., "Yes (GitHub)") to en.json and es.json under featureStatus.custom, including both title (display text) and description (tooltip text).
Consistency:
Use t() for all text output in the 'custom' case, aligning with the function’s existing comment: "Uses the translation system via t() function for all text displayed to users."
Preserve existing behavior for other cases (e.g., yes, no, Channel Management).
Preserve UI:
Keep the orange styling (bg-orange-100, text-orange-600) for custom values.
Maintain tooltip (title) and display text separation.
Scalability:
Structure the logic to easily add new customText translations in the future.
Output:

Provide the updated renderFeatureStatus function for ./src/components/ComparisonTable.tsx.
Include updated ./src/locales/en.json and ./src/locales/es.json with new keys for customText translations (e.g., yesGitHub).
Add a brief explanation of the changes and instructions for adding new customText translations.
Example Fix (for guidance):

Logic: Map "Yes (GitHub)" to t('featureStatus.custom.yesGitHub.title').
Translation files:
json

Collapse

Wrap

Copy
// en.json
"featureStatus": {
  "custom": {
    "yesGitHub": {
      "title": "Yes (GitHub)",
      "description": "Feature is open source with code available on GitHub"
    }
  }
}
// es.json
"featureStatus": {
  "custom": {
    "yesGitHub": {
      "title": "Sí (GitHub)",
      "description": "La característica es de código abierto con código disponible en GitHub"
    }
  }
}
Instructions:

Modify the 'custom' case in renderFeatureStatus to check customText and use t() with specific keys.
Update ./src/locales/en.json and ./src/locales/es.json to include at least the yesGitHub case, building on their existing structure.
Test with customText = "Yes (GitHub)" to ensure it displays "Yes (GitHub)" in English and "Sí (GitHub)" in Spanish.
Today’s date is March 30, 2025.
Please proceed with the refactoring and provide the updated function, translation files, and an explanation.