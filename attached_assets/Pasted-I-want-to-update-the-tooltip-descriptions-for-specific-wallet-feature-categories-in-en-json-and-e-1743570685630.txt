I want to update the tooltip descriptions for specific wallet feature categories in `en.json` and `es.json` with new English and Spanish content. Below are the exact revised descriptions for the categories `availability`, `category`, `nodeType`, `lspIntegration`, `zeroConfChannels`, `clientSideRouting`, `watchtowerIntegration`, and `simpleTaprootChannels`. Only these categories should be updated—do not change descriptions for other features (e.g., `platform`, `kyc`) or make up new content. Use the exact text I provide.

**Revised English Descriptions:**
- "availability": "Geographic restrictions on wallet usage. Standard iOS/Android availability may exclude small or sanctioned countries but covers most. Desktop/Web platforms are harder to restrict."
- "category": "Type of wallet architecture. Options include custodial, non-custodial on-chain, Liquid with Boltz swaps to LN, L1/L2 (on-chain and Lightning node), or UI for remote server nodes."
- "nodeType": "How the wallet connects to Bitcoin. 'API' means no custom node connection. Options like Electrum Server or Neutrino allow custom node connections via different interfaces."
- "lspIntegration": "Lightning Service Provider integration. May include channel management, pathfinding, zero-conf channels, watchtower, or Static Channel Backups (SCB) storage, fully or partially."
- "zeroConfChannels": "Support for zero-confirmation channels. Enables instant Bitcoin receipt on Lightning with LSP assistance."
- "clientSideRouting": "Payment routing method. Client-side routing is local; LSP delegation or Trampoline payments offload pathfinding to the server for faster setup but less privacy."
- "watchtowerIntegration": "Built-in custom watchtower support. Prevents channel fraud if channel management is enabled; otherwise, LSP handles it."
- "simpleTaprootChannels": "Support for Simple Taproot Channels."

**Spanish Translations:**
- "availability": "Restricciones geográficas de uso. Disponibilidad estándar en iOS/Android puede excluir países pequeños o sancionados, pero cubre la mayoría. Plataformas Desktop/Web son más difíciles de restringir."
- "category": "Tipo de arquitectura de la billetera. Incluye custodial, no custodial en cadena, Liquid con swaps de Boltz a LN, L1/L2 (en cadena y nodo Lightning), o UI para nodos remotos."
- "nodeType": "Cómo se conecta al Bitcoin. 'API' significa sin conexión a nodo propio. Opciones como Electrum Server o Neutrino permiten conexión a nodos propios vía interfaces distintas."
- "lspIntegration": "Integración con Proveedor de Servicios Lightning. Puede incluir gestión de canales, búsqueda de rutas, canales zero-conf, watchtower o almacenamiento de SCB, total o parcialmente."
- "zeroConfChannels": "Soporte para canales de confirmación cero. Permite recibir Bitcoin en Lightning instantáneamente con asistencia de LSP."
- "clientSideRouting": "Método de enrutamiento de pagos. Enrutamiento local es en cliente; delegación a LSP o pagos Trampoline pasan la búsqueda de rutas al servidor para inicio rápido pero menos privacidad."
- "watchtowerIntegration": "Soporte integrado para watchtowers personalizados. Previene fraudes en canales si la gestión de canales está habilitada; si no, el LSP lo cubre."
- "simpleTaprootChannels": "Soporte para Canales Simple Taproot."

Please:
1. **Update Translation Files**:
   - Update `en.json` with the exact English descriptions under the `features` section, replacing only the specified categories:
     ```json
     "features": {
       "availability": { "description": "Geographic restrictions on wallet usage. Standard iOS/Android availability may exclude small or sanctioned countries but covers most. Desktop/Web platforms are harder to restrict." },
       "category": { "description": "Type of wallet architecture. Options include custodial, non-custodial on-chain, Liquid with Boltz swaps to LN, L1/L2 (on-chain and Lightning node), or UI for remote server nodes." },
       "nodeType": { "description": "How the wallet connects to Bitcoin. 'API' means no custom node connection. Options like Electrum Server or Neutrino allow custom node connections via different interfaces." },
       "lspIntegration": { "description": "Lightning Service Provider integration. May include channel management, pathfinding, zero-conf channels, watchtower, or Static Channel Backups (SCB) storage, fully or partially." },
       "zeroConfChannels": { "description": "Support for zero-confirmation channels. Enables instant Bitcoin receipt on Lightning with LSP assistance." },
       "clientSideRouting": { "description": "Payment routing method. Client-side routing is local; LSP delegation or Trampoline payments offload pathfinding to the server for faster setup but less privacy." },
       "watchtowerIntegration": { "description": "Built-in custom watchtower support. Prevents channel fraud if channel management is enabled; otherwise, LSP handles it." },
       "simpleTaprootChannels": { "description": "Support for Simple Taproot Channels." }
       // ... leave other features unchanged ...
     }
Update es.json with the exact Spanish descriptions under the same structure:
json

Collapse

Wrap

Copy
"features": {
  "availability": { "description": "Restricciones geográficas de uso. Disponibilidad estándar en iOS/Android puede excluir países pequeños o sancionados, pero cubre la mayoría. Plataformas Desktop/Web son más difíciles de restringir." },
  "category": { "description": "Tipo de arquitectura de la billetera. Incluye custodial, no custodial en cadena, Liquid con swaps de Boltz a LN, L1/L2 (en cadena y nodo Lightning), o UI para nodos remotos." },
  "nodeType": { "description": "Cómo se conecta al Bitcoin. 'API' significa sin conexión a nodo propio. Opciones como Electrum Server o Neutrino permiten conexión a nodos propios vía interfaces distintas." },
  "lspIntegration": { "description": "Integración con Proveedor de Servicios Lightning. Puede incluir gestión de canales, búsqueda de rutas, canales zero-conf, watchtower o almacenamiento de SCB, total o parcialmente." },
  "zeroConfChannels": { "description": "Soporte para canales de confirmación cero. Permite recibir Bitcoin en Lightning instantáneamente con asistencia de LSP." },
  "clientSideRouting": { "description": "Método de enrutamiento de pagos. Enrutamiento local es en cliente; delegación a LSP o pagos Trampoline pasan la búsqueda de rutas al servidor para inicio rápido pero menos privacidad." },
  "watchtowerIntegration": { "description": "Soporte integrado para watchtowers personalizados. Previene fraudes en canales si la gestión de canales está habilitada; si no, el LSP lo cubre." },
  "simpleTaprootChannels": { "description": "Soporte para Canales Simple Taproot." }
  // ... leave other features unchanged ...
}
Verify Usage:
Ensure ComparisonTable.tsx uses these updated descriptions via the translateFeature function (e.g., translateFeature(feature).description) for tooltips in the table header. If not set up this way, suggest how to adjust it to pull from en.json/es.json based on the language.
Test:
Confirm that hovering over the feature titles (e.g., "availability", "nodeType") in the table shows the exact new English descriptions in English mode and Spanish descriptions in Spanish mode, as provided above.
Don’t modify unrelated files or feature descriptions (e.g., platform, kyc)—only update the specified categories with the exact text I’ve given.
Let me know the updates made to en.json and es.json, confirm they match the exact text I provided, and verify that the new tooltip descriptions display correctly for these categories in both languages!