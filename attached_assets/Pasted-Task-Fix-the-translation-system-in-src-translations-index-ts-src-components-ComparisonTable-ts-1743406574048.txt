Task: Fix the translation system in ./src/translations/index.ts, ./src/components/ComparisonTable.tsx, ./src/translations/en.json, and ./src/translations/es.json to ensure all feature values from the provided CSV data display correctly in Spanish on the Spanish page, while preserving icon rendering for "Yes", "No", "Partial", and "Optional". Currently, most values (e.g., "Yes (GitHub)") display in English despite Spanish entries in es.json, due to a bug in getTranslation and a remaining special case for comma-separated values in renderFeatureStatus. Additionally, some CSV values are missing from the translation files.

Context:

Files to modify:
./src/translations/index.ts: Implements getTranslation.
./src/components/ComparisonTable.tsx: Contains renderFeatureStatus.
./src/translations/en.json and ./src/translations/es.json: Translation files (confirmed paths).
CSV data includes values like "Yes", "No", "Yes (GitHub)", "Seed Phrase + SCB", "P2TR, P2WPKH", "Email / Phone", "5 BTC", etc.
Issues:
getTranslation falls back to English prematurely when encountering nested objects (e.g., featureStatus.values.yes_github), causing values like "Yes (GitHub)" to display as "Yes (GitHub)" instead of "Sí (GitHub)".
renderFeatureStatus has a special case for comma-separated values (if (customText && customText.includes(','))) that should be removed for uniformity.
Translation files lack some CSV values (e.g., "Email / Phone", "5 BTC").
Deployment: <html lang="es"> confirms language = 'es', but translations fail for nested keys.
Requirements:

Fix getTranslation:
Update getTranslation in ./src/translations/index.ts to fully resolve nested keys (e.g., featureStatus.values.yes_github.label) without falling back to English when encountering an object. Only fall back if the final resolved value isn’t a string.
Uniform renderFeatureStatus:
Remove the special case for comma-separated values in ./src/components/ComparisonTable.tsx (currently under if (customText && customText.includes(','))).
Use a single rendering logic for all values, preserving icons for "Yes" (checkmark), "No" (X), "Partial" (P), and "Optional" (O) via featureStatus.icons.
Complete Translation Files:
Add all CSV values to featureStatus.values in ./src/translations/en.json and ./src/translations/es.json, including missing ones like "email_phone", "5_btc", "nostr_nsec_private_key", etc.
Ensure existing entries (e.g., "yes_github") remain intact.
Preserve UI:
Keep checkmark for "Yes", X for "No", and text for "Partial"/"Optional".
Apply styles from featureStatus.styles (e.g., bg-orange-100 for "custom").
Scalability:
Support new values with translation file updates only.
Debugging:
Retain console.warn for missing translations in getTranslation.
Output:

Updated ./src/translations/index.ts with fixed getTranslation.
Updated ./src/components/ComparisonTable.tsx with uniform renderFeatureStatus.
Updated ./src/translations/en.json and ./src/translations/es.json with all CSV values.
Brief explanation and instructions for adding new translations.
Instructions:

In ./src/translations/index.ts, update getTranslation to:
typescript

Collapse

Wrap

Copy
export function getTranslation(lang: Language, key: string): string {
  const keys = getTranslationPath(key);
  let current: any = translations[lang];
  for (const k of keys) {
    if (current && typeof current === 'object' && k in current) {
      current = current[k];
    } else {
      console.warn(`Missing translation for ${lang}: ${key}`);
      if (lang !== 'en') {
        return getTranslation('en', key);
      }
      return key;
    }
  }
  if (typeof current !== 'string') {
    console.warn(`Invalid translation (not a string) for ${lang}: ${key}`);
    if (lang !== 'en') {
      return getTranslation('en', key);
    }
    return key;
  }
  return current;
}
In ./src/components/ComparisonTable.tsx, remove the if (customText && customText.includes(',')) block in renderFeatureStatus, using the generic rendering logic for all values (e.g., render as a single pill with bgClass and textClass).
Add missing CSV values to featureStatus.values in both en.json and es.json, e.g.:
json

Collapse

Wrap

Copy
// en.json
"featureStatus": {
  "values": {
    "email_phone": { "label": "Email / Phone", "title": "Recovery via email or phone" },
    "5_btc": { "label": "5 BTC", "title": "Limit of 5 BTC" },
    "nostr_nsec_private_key": { "label": "Nostr nsec (private key)", "title": "Recovery via Nostr private key" },
    "whatsapp_account": { "label": "Whatsapp Account", "title": "Recovery via Whatsapp account" },
    "username_pw": { "label": "Username / PW", "title": "Recovery via username and password" },
    "email_pw_or_recovery_code_emergency_kit_cloud_upload_or_download": {
      "label": "Email / PW or Recovery Code + Emergency Kit (Cloud upload or download)",
      "title": "Recovery via email/password or recovery code with emergency kit"
    },
    "seed_phrase": { "label": "Seed Phrase", "title": "Recovery via seed phrase" },
    "automatic_cloud_upload": { "label": "Automatic Cloud Upload", "title": "Automatic cloud backup" },
    "send": { "label": "Send", "title": "Send capability" },
    "restricted_in_usa_and_others": { "label": "Restricted in USA and others", "title": "Restricted in USA and other regions" },
    "very_limited": { "label": "Very Limited", "title": "Very limited availability" },
    "24_hours": { "label": "24 hours", "title": "24-hour duration" },
    "1_hour": { "label": "1 hour", "title": "1-hour duration" }
  }
  // ... rest unchanged ...
}

// es.json
"featureStatus": {
  "values": {
    "email_phone": { "label": "Correo / Teléfono", "title": "Recuperación a través de correo o teléfono" },
    "5_btc": { "label": "5 BTC", "title": "Límite de 5 BTC" },
    "nostr_nsec_private_key": { "label": "Nostr nsec (clave privada)", "title": "Recuperación a través de clave privada Nostr" },
    "whatsapp_account": { "label": "Cuenta de Whatsapp", "title": "Recuperación a través de cuenta de Whatsapp" },
    "username_pw": { "label": "Usuario / Contraseña", "title": "Recuperación a través de usuario y contraseña" },
    "email_pw_or_recovery_code_emergency_kit_cloud_upload_or_download": {
      "label": "Correo / Contraseña o Código de Recuperación + Kit de Emergencia (Subida o descarga en la nube)",
      "title": "Recuperación a través de correo/contraseña o código de recuperación con kit de emergencia"
    },
    "seed_phrase": { "label": "Frase Semilla", "title": "Recuperación a través de frase semilla" },
    "automatic_cloud_upload": { "label": "Subida Automática a la Nube", "title": "Copia de seguridad automática en la nube" },
    "send": { "label": "Enviar", "title": "Capacidad de envío" },
    "restricted_in_usa_and_others": { "label": "Restringido en EE.UU. y otros", "title": "Restringido en EE.UU. y otras regiones" },
    "very_limited": { "label": "Muy Limitado", "title": "Disponibilidad muy limitada" },
    "24_hours": { "label": "24 horas", "title": "Duración de 24 horas" },
    "1_hour": { "label": "1 hora", "title": "Duración de 1 hora" }
  }
  // ... rest unchanged ...
}
Test with language = 'es': "Yes (GitHub)" should display "Sí (GitHub)", "Email / Phone" should display "Correo / Teléfono".
Date: March 30, 2025.
Please proceed and provide the updated files and explanation.

Expected Outcome