Prompt for Replit Agent (Tooltip Position Fix)
text

Collapse

Wrap

Copy
I’ve tested the search fix in `ComparisonTable.tsx`, and it works perfectly—searching a wallet name now shows all feature columns. Now, I need you to fix another UI issue: in `FeatureTooltip.tsx`, the tooltips display too low when hovering over feature values in the comparison table. They should appear closer to or above the hovered element for better usability.

Here’s the current `FeatureTooltip.tsx`:

```tsx
import React from 'react';
import { Wallet } from '@/lib/types';
import { useLanguage } from '@/hooks/use-language';

interface FeatureTooltipProps {
  featureName?: string;
  value: string;
  customText?: string;
  wallet?: Wallet;
  children: React.ReactNode;
}

const FeatureTooltip = ({ 
  featureName, 
  value, 
  customText, 
  wallet, 
  children 
}: FeatureTooltipProps) => {
  const { t } = useLanguage();
  
  const normalizeKey = (key: string): string => {
    return key
      .trim()
      .toLowerCase()
      .replace(/[^\w\s]/g, '')
      .replace(/\s+/g, '_');
  };
  
  const displayValue = (value === 'custom' && customText) ? customText : value;
  const normalizedKey = normalizeKey(displayValue);
  
  const baseKey = `featureStatus.values.${normalizedKey}`;
  const walletSpecificKey = wallet 
    ? `featureStatus.values.${normalizedKey}_${normalizeKey(wallet.name)}`
    : '';
  
  const tooltipText = walletSpecificKey
    ? t(`${walletSpecificKey}.title`, undefined, t(`${baseKey}.title`, undefined, displayValue))
    : t(`${baseKey}.title`, undefined, displayValue);

  return (
    <div
      className="inline-flex items-center justify-center cursor-help"
      title={tooltipText}
      data-tooltip={tooltipText}
    >
      {children}
    </div>
  );
};

export default FeatureTooltip;
And here’s the relevant part of ComparisonTable.tsx where FeatureTooltip is used (for context, no changes needed here unless necessary):

tsx

Collapse

Wrap

Copy
const renderFeatureStatus = (value: string, customText?: string, featureName?: string, wallet?: Wallet): JSX.Element => {
  // ... existing logic ...
  if (useIcon) {
    if (value === 'yes') {
      return (
        <FeatureTooltip featureName={featureName} value={value} customText={customText} wallet={wallet}>
          <span className="inline-flex items-center justify-center h-6 w-6 rounded-full bg-primary/20">
            <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-primary" viewBox="0 0 20 20" fill="currentColor">
              <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
            </svg>
          </span>
        </FeatureTooltip>
      );
    } else if (value === 'no' || value === 'not_possible') {
      return (
        <FeatureTooltip featureName={featureName} value={value} customText={customText} wallet={wallet}>
          <span className="inline-flex items-center justify-center h-6 w-6 rounded-full bg-destructive/20">
            <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-destructive" viewBox="0 0 20 20" fill="currentColor">
              <path fillRule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clipRule="evenodd" />
            </svg>
          </span>
        </FeatureTooltip>
      );
    } else if (value === 'partial' || value === 'optional') {
      return (
        <FeatureTooltip featureName={featureName} value={value} customText={customText} wallet={wallet}>
          <span className="inline-flex items-center justify-center h-6 w-6 rounded-full bg-orange-500/20">
            <span className="text-xs font-medium text-orange-500">{label}</span>
          </span>
        </FeatureTooltip>
      );
    }
  }
  return (
    <FeatureTooltip featureName={featureName} value={value} customText={customText} wallet={wallet}>
      <span className={`inline-flex items-center justify-center h-6 px-2 rounded-md ${bgClass}`}>
        <span className={`text-xs font-medium ${textClass}`}>{label}</span>
      </span>
    </FeatureTooltip>
  );
};
Please fix the tooltip position in FeatureTooltip.tsx so that:

Tooltips appear closer to or above the hovered element (not too low).
You can either:
Use CSS to adjust the native browser tooltip positioning (e.g., with a wrapper and pseudo-elements like :before or :after).
Integrate a lightweight tooltip library like react-tooltip or @radix-ui/react-tooltip (preferred if simple CSS isn’t sufficient).
If using a library, add the necessary dependency to package.json and import it.
Keep the existing title and data-tooltip attributes for fallback, but ensure the primary tooltip display is correctly positioned.
Test with a feature value (e.g., "limited" for "Bitkit") to confirm the tooltip appears in the right spot.
Don’t modify unrelated functionality in FeatureTooltip.tsx or ComparisonTable.tsx unless it’s required for the fix. Let me know how you resolved it, including any CSS changes or library used, and confirm it works as expected!