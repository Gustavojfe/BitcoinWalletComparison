{
  "features": {
    "Platform Support": {
      "name": "Platform Support",
      "description": "Which operating systems are supported (iOS, Android, Windows, macOS, Linux)?"
    },
    "Availability": {
      "name": "Availability",
      "description": "Geographic restrictions on wallet usage. Standard iOS/Android availability may exclude small or sanctioned countries but covers most. Desktop/Web platforms are harder to restrict."
    },
    "User Interface (UI/UX)": {
      "name": "User Interface (UI/UX)",
      "description": "Is it beginner-friendly, or geared toward advanced users (e.g., CLI vs. GUI)?"
    },
    "Open Source Status": {
      "name": "Open Source Status",
      "description": "Is the code open source? If so, link to the repository (e.g., GitHub)."
    },
    "Custodial vs. Non-Custodial": {
      "name": "Custodial",
      "description": "Does the wallet give users full control of private keys, or is it custodial?"
    },
    "Category": {
      "name": "Category",
      "description": "Type of wallet architecture. Options include custodial, non-custodial on-chain, Liquid with Boltz swaps to LN, L1/L2 (on-chain and Lightning node), or UI for remote server nodes."
    },
    "KYC": {
      "name": "KYC",
      "description": "Does the wallet require Know Your Customer verification for use?"
    },
    "Transaction Fees": {
      "name": "Transaction Fees",
      "description": "How are fees handled (fixed, configurable, dynamic based on network)?"
    },
    "Transaction Limits": {
      "name": "Transaction Limits",
      "description": "Are there limits on transaction sizes or frequencies?"
    },
    "Backup Options": {
      "name": "Backup Options",
      "description": "How are keys and channels backed up (e.g., seed phrase, static channel backup, cloud)?"
    },
    "Lightning Network Implementation": {
      "name": "Lightning Network Implementation",
      "description": "Which Lightning Network implementation is used (e.g., LND, c-lightning, Eclair)?"
    },
    "Node Type": {
      "name": "Node Type",
      "description": "How the wallet connects to Bitcoin. 'API' means no custom node connection. Options like Electrum Server or Neutrino allow custom node connections via different interfaces."
    },
    "BOLT11 Support": {
      "name": "BOLT11 Support",
      "description": "Does it support BOLT11 invoices for payments?"
    },
    "BOLT12 Support": {
      "name": "BOLT12 Support",
      "description": "Does it support BOLT12 offers (e.g., reusable invoices)?"
    },
    "UMA Support": {
      "name": "UMA Support",
      "description": "Does it support Universal Money Addresses (UMA) for cross-platform payments?"
    },
    "BOLT12 + HRN (BLIP32) Support": {
      "name": "BOLT12 + HRN (BLIP32) Support",
      "description": "Does it support BOLT12 with Hashed Random Nonces (HRN) per BLIP32?"
    },
    "LNURL Support": {
      "name": "LNURL Support",
      "description": "Does it support LNURL-auth, LNURL-pay, LNURL-withdraw, etc.?"
    },
    "Lightning Address Support": {
      "name": "Lightning Address Support",
      "description": "Does it support human-readable Lightning Addresses (e.g., user@domain.com)?"
    },
    "No-Amount Invoices": {
      "name": "No-Amount Invoices",
      "description": "Can it generate invoices without a specified amount (open-ended)?"
    },
    "Invoice Expiry Control": {
      "name": "Invoice Expiry Control",
      "description": "Can users customize invoice expiration times?"
    },
    "Custom Invoice Metadata": {
      "name": "Custom Invoice Metadata",
      "description": "Can users add custom metadata to invoices (e.g., for merchant tracking or descriptions)?"
    },
    "Offline Receiving (Non-Custodial)": {
      "name": "Offline Receiving (Non-Custodial)",
      "description": "Can the wallet receive payments while offline (e.g., via LNURL, async payments, non-custodially)?"
    },
    "On-Chain Integration": {
      "name": "On-Chain Integration",
      "description": "Can the wallet handle on-chain Bitcoin transactions alongside Lightning?"
    },
    "Separate LN / On-Chain Balances": {
      "name": "Separate LN / On-Chain Balances",
      "description": "Are Lightning and on-chain balances tracked distinctly in the UI?"
    },
    "Bitcoin Address Type": {
      "name": "Bitcoin Address Type",
      "description": "Which Bitcoin address types can it generate (e.g., SegWit bech32, Taproot bech32m, Legacy)?"
    },
    "Taproot Transactions": {
      "name": "Taproot Transactions",
      "description": "Can it send to and receive from Taproot addresses (e.g., Schnorr signatures supported)?"
    },
    "Submarine Swaps": {
      "name": "Submarine Swaps",
      "description": "Are submarine swaps supported for seamless on-chain â†” Lightning conversion?"
    },
    "Swap-in Potentiam (SIP)": {
      "name": "Swap-in Potentiam (SIP)",
      "description": "Does it allow potential swaps for future liquidity (e.g., pre-arranged conversions)?"
    },
    "Tor": {
      "name": "Tor",
      "description": "Does it support Tor or onion routing for privacy?"
    },
    "Payment Decorrelation": {
      "name": "Payment Decorrelation",
      "description": "Does it implement techniques to prevent payment correlation (e.g., random delays, dummy hops)?"
    },
    "Channel Management": {
      "name": "Channel Management",
      "description": "Can users open/close channels manually, or is it automated?"
    },
    "Inbound Liquidity": {
      "name": "Inbound Liquidity",
      "description": "Can users manage inbound capacity (e.g., swaps, channel opening)?"
    },
    "Rebalancing Tools": {
      "name": "Rebalancing Tools",
      "description": "Are there tools to rebalance channel liquidity?"
    },
    "Maximum Channel Capacity": {
      "name": "Maximum Channel Capacity",
      "description": "What's the largest payment/channel size supported?"
    },
    "Number of Confirmations to Channel Usability": {
      "name": "Number of Confirmations to Channel Usability",
      "description": "How many on-chain confirmations are needed before a channel is usable?"
    },
    "Dual-Funded Channels": {
      "name": "Dual-Funded Channels",
      "description": "Can channels be dual-funded (both parties contribute funds) for better liquidity?"
    },
    "Splicing Support": {
      "name": "Splicing Support",
      "description": "Does it allow splicing (adding/removing funds from channels without closing them)?"
    },
    "Zero-Conf Channels": {
      "name": "Zero-Conf Channels",
      "description": "Support for zero-confirmation channels. Enables instant Bitcoin receipt on Lightning with LSP assistance."
    },
    "Private vs. Public Channels": {
      "name": "Private/Public Channels",
      "description": "Can users choose between private (unannounced) and public (routable) channels?"
    },
    "Lightning Service Provider (LSP) Integration": {
      "name": "Lightning Service Provider (LSP) Integration",
      "description": "Lightning Service Provider integration. May include channel management, pathfinding, zero-conf channels, watchtower, or Static Channel Backups (SCB) storage, fully or partially."
    },
    "Hub Connectivity": {
      "name": "Hub Connectivity",
      "description": "Does it connect to specific hubs, or is it fully decentralized?"
    },
    "Watchtower Integration": {
      "name": "Watchtower Integration",
      "description": "Built-in custom watchtower support. Prevents channel fraud if channel management is enabled; otherwise, LSP handles it."
    },
    "Client-Side Routing": {
      "name": "Client-Side Routing",
      "description": "The wallet performs routing calculations locally to find the best path for payments, rather than relying on a centralized service. Provides greater privacy and control, but may require more device resources."
    },
    "Peer Backup Options": {
      "name": "Peer Backup Options",
      "description": "Can channel states be backed up with trusted peers instead of centralized services?"
    },
    "Force-Close Handling": {
      "name": "Force-Close Handling",
      "description": "How does it manage force-closed channels (e.g., penalty transactions, recovery options)?"
    },
    "State Channel Recovery": {
      "name": "State Channel Recovery",
      "description": "Are there mechanisms to recover lost channel states (e.g., from corrupted data)?"
    },
    "MPP": {
      "name": "MPP",
      "description": "Multi-Path Payments split transactions across multiple channels for better reliability and privacy. Enables sending amounts larger than any single channel's capacity, improving payment success rates and reducing payment failures due to insufficient liquidity in a single channel."
    },
    "JIT Routing": {
      "name": "JIT Routing",
      "description": "Just-in-Time routing dynamically rebalances channel liquidity during payments, enabling forwarding of otherwise impossible payments."
    },
    "Trampoline Payments": {
      "name": "Trampoline Payments",
      "description": "Simplifies routing for mobile or lightweight clients by delegating complex path-finding to trusted trampoline nodes, reducing computational load while maintaining privacy."
    },
    "Dynamic Fee Bumping": {
      "name": "Dynamic Fee Bumping",
      "description": "Does it support RBF (Replace-By-Fee) or CPFP (Child-Pays-For-Parent) for stuck transactions?"
    },
    "Channel Liquidity Ads": {
      "name": "Channel Liquidity Ads",
      "description": "Does it support advertising available liquidity to other nodes (e.g., via BOLT 14)?"
    },
    "Stuckless Payments": {
      "name": "Stuckless Payments",
      "description": "Does it support stuckless payment proposals to avoid HTLC timeouts?"
    },
    "HODL Invoices": {
      "name": "HODL Invoices",
      "description": "Does it allow \"HODL invoices\" where payment is held until a condition is met?"
    },
    "Stateless Invoices": {
      "name": "Stateless Invoices",
      "description": "Does it support stateless invoices that don't require server-side storage?"
    },
    "Simple Taproot Channels": {
      "name": "Simple Taproot Channels",
      "description": "Support for simplified Taproot channel configuration which improves privacy and reduces on-chain fees. These channels use Taproot for commitment transactions, making channel opens and closes indistinguishable from regular Taproot transactions."
    },
    "Taproot Assets": {
      "name": "Taproot Assets",
      "description": "Can it handle Taproot-based assets beyond BTC on Lightning?"
    },
    "CLTV Expiry Delta Custom": {
      "name": "CLTV Expiry Delta Custom",
      "description": "Can users set custom CheckLockTimeVerify (CLTV) deltas per channel?"
    },
    "Advanced Channel Outputs": {
      "name": "Advanced Channel Outputs",
      "description": "Does it support V3 commitments, ephemeral anchors, or anchor outputs?"
    },
    "Testnet Support": {
      "name": "Testnet Support",
      "description": "Can it connect to Bitcoin/Lightning testnet for development or experimentation?"
    },
    "Developer APIs/SDKs": {
      "name": "Developer APIs/SDKs",
      "description": "Are there APIs or SDKs available for integration into other apps?"
    }
  }
}